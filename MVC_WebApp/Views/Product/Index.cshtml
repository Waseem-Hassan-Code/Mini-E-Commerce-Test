@{
    ViewData["Title"] = "Product Catalog";
}

<div class="card shadow border-0 mt-4">
    <div class="card-body p-4">
        <div class="row pb-3">
            <div class="col-6">
                <input type="text" id="searchBox" class="form-control" placeholder="Search products by name or category..." onkeyup="searchProducts()">
            </div>
            <div class="col-6 text-end">
                <a class="btn btn-outline-primary" data-bs-toggle="modal" data-bs-target="#createEditProductModal" onclick="openCreateModal()">
                    <i class="bi bi-plus-square"></i> Create New Coupon
                </a>
            </div>
        </div>
        <table class="table">
            <thead>
                <tr>
                    <th>Product Id</th>
                    <th>Name</th>
                    <th>Description</th>
                    <th>Category</th>
                    <th>Price</th>
                    <th>Added On</th>
                    <th></th>
                </tr>
            </thead>
            <tbody id="productTableBody">
            </tbody>
        </table>
    </div>
</div>


<div class="modal fade" id="createEditProductModal" tabindex="-1" aria-labelledby="createEditProductModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createEditProductModalLabel">Add New Product</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="clientForm">
                    <input type="hidden" id="id" name="Id">

                    <div class="mb-3">
                        <label for="name" class="form-label">Product Name</label>
                        <input type="text" class="form-control" id="name" name="Name">
                        <div id="nameError" class="text-danger"></div>
                    </div>

                    <div class="mb-3">
                        <label for="description" class="form-label">Description</label>
                        <input type="text" class="form-control" id="description" name="Description">
                        <div id="descriptionError" class="text-danger"></div>
                    </div>

                    <div class="mb-3">
                        <label for="price" class="form-label">Price</label>
                        <input type="nu" class="form-control" id="price" name="Price">
                        <div id="priceError" class="text-danger"></div>
                    </div>

                    <div class="mb-3">
                        <label for="category" class="form-label">Category</label>
                        <input type="text" class="form-control" id="category" name="Category">
                        <div id="categoryError" class="text-danger"></div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="saveProductButton" onclick="validateAndSaveProduct()">Save Product</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>

        $(document).ready(function () {
            loadClients();
        });

        function loadClients(searchTerm = '') {
            $.ajax({
                type: 'GET',
                url: '@Url.Action("GetProducts", "Product")',
                data: { searchTerm: searchTerm },
                success: function (response) {
                    $('#productTableBody').empty();
                    response.data.forEach(product => {
                        $('#productTableBody').append(`
                                        <tr>
                                            <td>${product.id}</td>
                                            <td>${product.name}</td>
                                            <td>${product.description}</td>
                                            <td>${product.category}</td>
                                            <td>${product.price}</td>
                                            <td>${product.createdDate}</td>
                                            <td>
                                                <a href="javascript:void(0)" onclick="openEditModal(${escapeHtml(JSON.stringify(product))})"><i class="bi bi-pencil"></i></a>
                                                <a href="javascript:void(0)" onclick="deleteProduct(${product.id})"><i class="bi bi-trash"></i></a>
                                            </td>
                                        </tr>
                                    `);
                    });
                }
            });
        }

        function searchProducts() {
            const searchTerm = $('#searchBox').val().trim();
            loadClients(searchTerm);
        }

        function escapeHtml(unsafe) {
            return unsafe
                .replace(/&/g, "&amp;")
                .replace(/</g, "&lt;")
                .replace(/>/g, "&gt;")
                .replace(/"/g, "&quot;")
                .replace(/'/g, "&#039;");
        }

        function openCreateModal() {
            clearErrors();
            $('#id').val('');
            $('#name').val('');
            $('#description').val('');
            $('#price').val('');
            $('#category').val('');
            $('#createEditProductModalLabel').text('Add New Product');
            $('#createEditProductModal').modal('show');
        }

        function openEditModal(product) {
            clearErrors();
            $('#id').val(product.id);
            $('#name').val(product.name);
            $('#description').val(product.description);
            $('#price').val(product.price);
            $('#category').val(product.category);
            $('#createEditProductModalLabel').text('Edit Product');
            $('#createEditProductModal').modal('show');
        }

        function clearErrors() {
            $('#nameError').text('');
            $('#descriptionError').text('');
            $('#priceError').text('');
            $('#categoryError').text('');
        }

        function validateAndSaveProduct() {
            clearErrors();
            let isValid = true;

            const name = $('#name').val().trim();
            const description = $('#description').val().trim();
            const price = $('#price').val().trim();
            const category = $('#category').val().trim();

            if (name === '') {
                $('#nameError').text('Product name is required.');
                isValid = false;
            }
            if (description === '') {
                $('#descriptionError').text('Description is required.');
                isValid = false;
            }
            if (price === '' || isNaN(price) || parseFloat(price) <= 0) {
                $('#priceError').text('Valid price is required.');
                isValid = false;
            }
            if (price < 10 || price > 300) {
                $('#priceError').text('Price should range between 10 and 300.');
                isValid = false;
            }
            if (category === '') {
                $('#categoryError').text('Category is required.');
                isValid = false;
            }

            if (isValid) {
                saveProduct();
            }
        }

        function saveProduct() {
            var formData = new FormData($('#clientForm')[0]);
            var url = $('#id').val() ? '@Url.Action("EditProduct", "Product")' : '@Url.Action("CreateProduct", "Product")';

            $.ajax({
                type: 'POST',
                url: url,
                data: formData,
                contentType: false,
                processData: false,
                success: function (response) {
                    if (response.success) {
                        $('#createEditProductModal').modal('hide');
                        loadClients();
                    } else {
                        alert('Failed to save product.');
                    }
                },
                error: function (xhr, status, error) {
                    console.error(error);
                }
            });
        }

        function deleteProduct(id) {
            if (confirm('Are you sure you want to delete this product?')) {
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("DeleteProduct", "Product")',
                    data: { id: id },
                    success: function (response) {
                        if (response.success) {
                            loadClients();
                        } else {
                            alert('Failed to delete product.');
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error(error);
                    }
                });
            }
        }
    </script>
}
